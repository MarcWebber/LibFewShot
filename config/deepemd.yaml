augment: true
augment_method: null
augment_times: 1
augment_times_query: 1
way_num: 5
shot_num: 1
query_num: 1
episode_size: 1
batch_size: 128
classifier:
  kwargs:
    feat_dim: 640
    lambda_epi: 0.25
    num_classes: 64
    temperature: 0.2
    temperature_attn: 5.0
    mode: meta
    args:
      norm: center
      way: 5
      shot: 1
      query: 1
      deepemd: fcn
      solver: opencv
      num_patch: 9
      sfc_lr: 0.1
      sfc_bs: 4
      temperature: 12.5
      form: L2
      metric: cosine
      l2_strength: 0.000001

  name: DeepEMD
  
  
data_root: ./data/fewshot/miniImageNet--ravi
deterministic: true
device_ids: 0
epoch: 100
image_size: 84
includes:
  - headers/data.yaml
  - headers/device.yaml
  - headers/misc.yaml
  - headers/model.yaml
  - headers/optimizer.yaml
  - classifiers/DeepEMD.yaml
  - backbones/resnet12_emd.yaml
log_interval: 100
log_level: info
log_name: null
log_paramerter: false
lr_scheduler:
  kwargs:
    T_max: 100
    eta_min: 0
  name: CosineAnnealingLR
n_gpu: 1

#optimizer = torch.optim.SGD([{'params': model.module.encoder.parameters(), 'lr': args.lr},
#                             {'params': model.module.fc.parameters(), 'lr': args.lr}
#                             ], momentum=0.9, nesterov=True, weight_decay=0.0005)
optimizer:
  kwargs:
    lr: 0.1
    momentum: 0.9
    nesterov: true
    weight_decay: 0.0005
  name: SGD
  other:
    emb_func: 0.1

parallel_part:
  - emb_func
pretrain_path: results/deepemd_pretrain_model/miniimagenet/resnet12/max_acc.pth

result_root: ./results
resume: false
save_interval: 10
save_part:
  - emb_func
seed: 0
tag: null
tb_scale: 1.5
test_episode: 100
test_epoch: 5
test_query: 2
test_shot: 1
test_way: 1
train_episode: 100
use_memory: false
dataloader_num: 2